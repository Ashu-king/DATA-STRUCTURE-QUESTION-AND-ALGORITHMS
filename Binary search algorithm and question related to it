#include <iostream>
using namespace std;
void binarysearch(int arr[],int size, int key){
  int start = 0;
  int end = size -1;
  int mid = (start + end)/2;
  for(;start<=mid; start++){
    if(arr[mid]==key){
      cout<<"element is at index: "<<mid;
    }else if(key>mid){
      start = mid+1;
    }else{
      end = mid -1;
    }
    mid = (start+mid)/2;
  }
}
int main() {
  int size;
  cout<<"enter the size for the array: \n";
  cin>>size;
  
  int arr[size];
  for(int i =0; i<size;i++){
    cout<<"Enter the element at index: "<<i<<"\n";    cin>>arr[i];
  }
  int key;
  cout<<"enter the element you want to search:\n";
  cin>>key;
  binarysearch(arr,size,key);
  
}
/*
          question 1 } first and last oocurence in the array?
          #include <bits/stdc++.h> 
void firstOcc(vector<int> &arr,int n, int key){
  int s = 0;
  int e = n -1;
  int mid = (start + end)/2;
    int ans = -1;
  for(;s<=mid; s++){
    if(arr[mid]==k){
      ans = mid;
        end = mid-1;
    }else if(k>mid){
      start = mid+1;
    }else{
      e = mid -1;
    }
    mid = (start+mid)/2;
  }
    return ans;
}
void LastOcc(vector<int> &arr,int n, int k){
  int start = 0;
  int end = n -1;
  int mid = (start + end)/2;
    int ans = 0;
  for(;start<=mid; start++){
    if(arr[mid]==k){
      ans = mid;
        start = mid+1;
    }else if(k>mid){
      start = mid+1;
    }else{
      end = mid -1;
    }
    mid = (start+mid)/2;
  }
    return ans;
}
pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
   pair<int,int>p;
    p.first= firstOcc(arr,n,k);
    p.second= LastOcc(arr,n,k);
        return p;
}
      */
